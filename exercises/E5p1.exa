package de.zalando.akka.actors

import akka.actor.ActorSystem
import akka.pattern.ask
import akka.testkit.{ImplicitSender, TestKit}
import akka.util.Timeout
import org.scalatest.{BeforeAndAfterAll, Matchers, WordSpecLike}

import scala.concurrent.Await
import scala.concurrent.duration._

class E5p1Test extends TestKit(ActorSystem("MySpec")) with ImplicitSender with WordSpecLike with Matchers with BeforeAndAfterAll {

  "PoliteActor" must {

    "respond with GreetingReply when told GreetingRequest for John including Mr." in {
      val politeActor = system.actorOf(PoliteGreeterActor.props)

      politeActor ! GreetingRequest("John")
      expectMsg(GreetingReply("Hello Mr. John"))
    }

    "respond with ChangeLanguageResponse when told ChangeGreetingRequest" in {
      val politeActor = system.actorOf(PoliteGreeterActor.props)

      politeActor ! ChangeGreetingRequest("TIME")
      expectMsg(ChangeLanguageResponse())

      politeActor ! GreetingRequest("John")
      expectMsg(GreetingReply("Good morning John"))
    }
  }

  override def afterAll() = {
    system.terminate()
  }
}
